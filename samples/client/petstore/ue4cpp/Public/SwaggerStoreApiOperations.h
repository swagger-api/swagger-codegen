/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
#pragma once

#include "SwaggerBaseModel.h"
#include "SwaggerStoreApi.h"

#include "SwaggerOrder.h"

namespace Swagger 
{

/* Delete purchase order by ID
 *
 * For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors
*/
class SWAGGER_API SwaggerStoreApi::DeleteOrderRequest : public Request
{
public:
    virtual ~DeleteOrderRequest() {}
	void SetupHttpRequest(const TSharedRef<IHttpRequest>& HttpRequest) const final;
	FString ComputePath() const final;
    
	/* ID of the order that needs to be deleted */
	FString OrderId;
};

class SWAGGER_API SwaggerStoreApi::DeleteOrderResponse : public Response
{
public:
    virtual ~DeleteOrderResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonObject) final;
    
    
};

/* Returns pet inventories by status
 *
 * Returns a map of status codes to quantities
*/
class SWAGGER_API SwaggerStoreApi::GetInventoryRequest : public Request
{
public:
    virtual ~GetInventoryRequest() {}
	void SetupHttpRequest(const TSharedRef<IHttpRequest>& HttpRequest) const final;
	FString ComputePath() const final;
    
};

class SWAGGER_API SwaggerStoreApi::GetInventoryResponse : public Response
{
public:
    virtual ~GetInventoryResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonObject) final;
    
    TMap<FString, int32> Content;
};

/* Find purchase order by ID
 *
 * For valid response try integer IDs with value &lt;&#x3D; 5 or &gt; 10. Other values will generated exceptions
*/
class SWAGGER_API SwaggerStoreApi::GetOrderByIdRequest : public Request
{
public:
    virtual ~GetOrderByIdRequest() {}
	void SetupHttpRequest(const TSharedRef<IHttpRequest>& HttpRequest) const final;
	FString ComputePath() const final;
    
	/* ID of pet that needs to be fetched */
	int64 OrderId;
};

class SWAGGER_API SwaggerStoreApi::GetOrderByIdResponse : public Response
{
public:
    virtual ~GetOrderByIdResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonObject) final;
    
    SwaggerOrder Content;
};

/* Place an order for a pet
 *
 * 
*/
class SWAGGER_API SwaggerStoreApi::PlaceOrderRequest : public Request
{
public:
    virtual ~PlaceOrderRequest() {}
	void SetupHttpRequest(const TSharedRef<IHttpRequest>& HttpRequest) const final;
	FString ComputePath() const final;
    
	/* order placed for purchasing the pet */
	SwaggerOrder Body;
};

class SWAGGER_API SwaggerStoreApi::PlaceOrderResponse : public Response
{
public:
    virtual ~PlaceOrderResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonObject) final;
    
    SwaggerOrder Content;
};

}
