/* 
 * Swagger Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AnimalApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AnimalApiTests
    {
        private AnimalApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AnimalApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AnimalApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AnimalApi
            //Assert.IsInstanceOfType(typeof(AnimalApi), instance, "instance is a AnimalApi");
        }

        /// <summary>
        /// Test AddAnimal
        /// </summary>
        [Test]
        public void AddAnimalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Animal body = null;
            //instance.AddAnimal(body);
            
        }
        /// <summary>
        /// Test DeleteAnimal
        /// </summary>
        [Test]
        public void DeleteAnimalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? animalId = null;
            //string apiKey = null;
            //instance.DeleteAnimal(animalId, apiKey);
            
        }
        /// <summary>
        /// Test GetAnimalById
        /// </summary>
        [Test]
        public void GetAnimalByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? animalId = null;
            //var response = instance.GetAnimalById(animalId);
            //Assert.IsInstanceOf<Animal> (response, "response is Animal");
        }
        /// <summary>
        /// Test UpdateAnimal
        /// </summary>
        [Test]
        public void UpdateAnimalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Animal body = null;
            //instance.UpdateAnimal(body);
            
        }
        /// <summary>
        /// Test UpdateAnimalWithForm
        /// </summary>
        [Test]
        public void UpdateAnimalWithFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? animalId = null;
            //string name = null;
            //string status = null;
            //instance.UpdateAnimalWithForm(animalId, name, status);
            
        }
    }

}
