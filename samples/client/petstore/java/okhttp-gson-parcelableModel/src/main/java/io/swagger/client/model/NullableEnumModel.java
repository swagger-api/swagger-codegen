/*
 * Swagger Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import android.os.Parcelable;
import android.os.Parcel;
/**
 * NullableEnumModel
 */


public class NullableEnumModel implements Parcelable {
  /**
   * Gets or Sets enumProp
   */
  @JsonAdapter(EnumPropEnum.Adapter.class)
  public enum EnumPropEnum {
    A("a"),
    B("b"),
    NULL(null);

    private String value;

    EnumPropEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static EnumPropEnum fromValue(String input) {
      for (EnumPropEnum b : EnumPropEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<EnumPropEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EnumPropEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public EnumPropEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return EnumPropEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("enumProp")
  private EnumPropEnum enumProp = null;

  public NullableEnumModel() {
  }
  public NullableEnumModel enumProp(EnumPropEnum enumProp) {
    this.enumProp = enumProp;
    return this;
  }

   /**
   * Get enumProp
   * @return enumProp
  **/
  @Schema(description = "")
  public EnumPropEnum getEnumProp() {
    return enumProp;
  }

  public void setEnumProp(EnumPropEnum enumProp) {
    this.enumProp = enumProp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NullableEnumModel nullableEnumModel = (NullableEnumModel) o;
    return Objects.equals(this.enumProp, nullableEnumModel.enumProp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enumProp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NullableEnumModel {\n");
    
    sb.append("    enumProp: ").append(toIndentedString(enumProp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(enumProp);
  }

  NullableEnumModel(Parcel in) {
    enumProp = (EnumPropEnum)in.readValue(null);
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<NullableEnumModel> CREATOR = new Parcelable.Creator<NullableEnumModel>() {
    public NullableEnumModel createFromParcel(Parcel in) {
      return new NullableEnumModel(in);
    }
    public NullableEnumModel[] newArray(int size) {
      return new NullableEnumModel[size];
    }
  };
}
