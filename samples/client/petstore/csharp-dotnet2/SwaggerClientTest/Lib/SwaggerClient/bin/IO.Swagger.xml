<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IO.Swagger</name>
    </assembly>
    <members>
        <member name="T:IO.Swagger.Model.Order">
             <summary>
             An order for a pets from the pet store
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Order.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Order.PetId">
             <summary>
             Gets or Sets PetId
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Order.Quantity">
             <summary>
             Gets or Sets Quantity
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Order.ShipDate">
             <summary>
             Gets or Sets ShipDate
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Order.Status">
             <summary>
             Order Status
             </summary>
             <value>Order Status</value>
            </member>
        <member name="P:IO.Swagger.Model.Order.Complete">
             <summary>
             Gets or Sets Complete
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Order.ToString">
             <summary>
             Get the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.Order.ToJson">
             <summary>
             Get the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="T:IO.Swagger.Model.ApiResponse">
             <summary>
             Describes the result of uploading an image resource
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ApiResponse.Code">
             <summary>
             Gets or Sets Code
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ApiResponse.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.ApiResponse.Message">
             <summary>
             Gets or Sets Message
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.ApiResponse.ToString">
             <summary>
             Get the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.ApiResponse.ToJson">
             <summary>
             Get the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="T:IO.Swagger.Model.User">
             <summary>
             A User who is purchasing from the pet store
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.User.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.User.Username">
             <summary>
             Gets or Sets Username
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.User.FirstName">
             <summary>
             Gets or Sets FirstName
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.User.LastName">
             <summary>
             Gets or Sets LastName
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.User.Email">
             <summary>
             Gets or Sets Email
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.User.Password">
             <summary>
             Gets or Sets Password
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.User.Phone">
             <summary>
             Gets or Sets Phone
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.User.UserStatus">
             <summary>
             User Status
             </summary>
             <value>User Status</value>
            </member>
        <member name="M:IO.Swagger.Model.User.ToString">
             <summary>
             Get the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.User.ToJson">
             <summary>
             Get the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="T:IO.Swagger.Model.Amount">
             <summary>
             some description 
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Amount.Value">
             <summary>
             some description 
             </summary>
             <value>some description </value>
            </member>
        <member name="P:IO.Swagger.Model.Amount.Currency">
             <summary>
             Gets or Sets Currency
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Amount.ToString">
             <summary>
             Get the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.Amount.ToJson">
             <summary>
             Get the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="T:IO.Swagger.Model.Pet">
             <summary>
             A pet for sale in the pet store
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Pet.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Pet.Category">
             <summary>
             Gets or Sets Category
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Pet.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Pet.PhotoUrls">
             <summary>
             Gets or Sets PhotoUrls
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Pet.Tags">
             <summary>
             Gets or Sets Tags
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Pet.Status">
             <summary>
             pet status in the store
             </summary>
             <value>pet status in the store</value>
            </member>
        <member name="M:IO.Swagger.Model.Pet.ToString">
             <summary>
             Get the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.Pet.ToJson">
             <summary>
             Get the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="T:IO.Swagger.Model.Currency">
             <summary>
             some description 
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Currency.ToString">
             <summary>
             Get the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.Currency.ToJson">
             <summary>
             Get the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="T:IO.Swagger.Model.Tag">
             <summary>
             A tag for a pet
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Tag.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Tag.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Tag.ToString">
             <summary>
             Get the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.Tag.ToJson">
             <summary>
             Get the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="T:IO.Swagger.Model.Category">
             <summary>
             A category for a pet
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Category.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:IO.Swagger.Model.Category.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:IO.Swagger.Model.Category.ToString">
             <summary>
             Get the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:IO.Swagger.Model.Category.ToJson">
             <summary>
             Get the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="T:IO.Swagger.Api.IStoreApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Api.IStoreApi.DeleteOrder(System.String)">
             <summary>
             Delete purchase order by ID For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors
             </summary>
             <param name="orderId">ID of the order that needs to be deleted</param>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.IStoreApi.GetInventory">
             <summary>
             Returns pet inventories by status Returns a map of status codes to quantities
             </summary>
             <returns>Dictionary&lt;string, int?&gt;</returns>
            </member>
        <member name="M:IO.Swagger.Api.IStoreApi.GetOrderById(System.Nullable{System.Int64})">
             <summary>
             Find purchase order by ID For valid response try integer IDs with value &lt;= 5 or &gt; 10. Other values will generated exceptions
             </summary>
             <param name="orderId">ID of pet that needs to be fetched</param>
             <returns>Order</returns>
            </member>
        <member name="M:IO.Swagger.Api.IStoreApi.PlaceOrder(IO.Swagger.Model.Order)">
             <summary>
             Place an order for a pet 
             </summary>
             <param name="body">order placed for purchasing the pet</param>
             <returns>Order</returns>
            </member>
        <member name="T:IO.Swagger.Api.StoreApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Api.StoreApi.#ctor(IO.Swagger.Client.ApiClient)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Api.StoreApi" /> class.
             </summary>
             <param name="apiClient"> an instance of ApiClient (optional)</param>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.StoreApi.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Api.StoreApi" /> class.
             </summary>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.StoreApi.SetBasePath(System.String)">
             <summary>
             Sets the base path of the API client.
             </summary>
             <param name="basePath">The base path</param>
             <value>The base path</value>
            </member>
        <member name="M:IO.Swagger.Api.StoreApi.GetBasePath(System.String)">
             <summary>
             Gets the base path of the API client.
             </summary>
             <param name="basePath">The base path</param>
             <value>The base path</value>
            </member>
        <member name="P:IO.Swagger.Api.StoreApi.ApiClient">
             <summary>
             Gets or sets the API client.
             </summary>
             <value>An instance of the ApiClient</value>
            </member>
        <member name="M:IO.Swagger.Api.StoreApi.DeleteOrder(System.String)">
             <summary>
             Delete purchase order by ID For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors
             </summary>
             <param name="orderId">ID of the order that needs to be deleted</param> 
             <returns></returns>            
            </member>
        <member name="M:IO.Swagger.Api.StoreApi.GetInventory">
             <summary>
             Returns pet inventories by status Returns a map of status codes to quantities
             </summary>
             <returns>Dictionary&lt;string, int?&gt;</returns>            
            </member>
        <member name="M:IO.Swagger.Api.StoreApi.GetOrderById(System.Nullable{System.Int64})">
             <summary>
             Find purchase order by ID For valid response try integer IDs with value &lt;= 5 or &gt; 10. Other values will generated exceptions
             </summary>
             <param name="orderId">ID of pet that needs to be fetched</param> 
             <returns>Order</returns>            
            </member>
        <member name="M:IO.Swagger.Api.StoreApi.PlaceOrder(IO.Swagger.Model.Order)">
             <summary>
             Place an order for a pet 
             </summary>
             <param name="body">order placed for purchasing the pet</param> 
             <returns>Order</returns>            
            </member>
        <member name="T:IO.Swagger.Api.IPetApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Api.IPetApi.AddPet(IO.Swagger.Model.Pet)">
             <summary>
             Add a new pet to the store 
             </summary>
             <param name="body">Pet object that needs to be added to the store</param>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.IPetApi.DeletePet(System.Nullable{System.Int64},System.String)">
             <summary>
             Deletes a pet 
             </summary>
             <param name="petId">Pet id to delete</param>
             <param name="apiKey"></param>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.IPetApi.FindPetsByStatus(System.Collections.Generic.List{System.String})">
             <summary>
             Finds Pets by status Multiple status values can be provided with comma separated strings
             </summary>
             <param name="status">Status values that need to be considered for filter</param>
             <returns>List&lt;Pet&gt;</returns>
            </member>
        <member name="M:IO.Swagger.Api.IPetApi.FindPetsByTags(System.Collections.Generic.List{System.String})">
             <summary>
             Finds Pets by tags Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
             </summary>
             <param name="tags">Tags to filter by</param>
             <returns>List&lt;Pet&gt;</returns>
            </member>
        <member name="M:IO.Swagger.Api.IPetApi.GetPetById(System.Nullable{System.Int64})">
             <summary>
             Find pet by ID Returns a single pet
             </summary>
             <param name="petId">ID of pet to return</param>
             <returns>Pet</returns>
            </member>
        <member name="M:IO.Swagger.Api.IPetApi.UpdatePet(IO.Swagger.Model.Pet)">
             <summary>
             Update an existing pet 
             </summary>
             <param name="body">Pet object that needs to be added to the store</param>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.IPetApi.UpdatePetWithForm(System.Nullable{System.Int64},System.String,System.String)">
             <summary>
             Updates a pet in the store with form data 
             </summary>
             <param name="petId">ID of pet that needs to be updated</param>
             <param name="name">Updated name of the pet</param>
             <param name="status">Updated status of the pet</param>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.IPetApi.UploadFile(System.Nullable{System.Int64},System.String,System.IO.Stream)">
             <summary>
             uploads an image 
             </summary>
             <param name="petId">ID of pet to update</param>
             <param name="additionalMetadata">Additional data to pass to server</param>
             <param name="_file">file to upload</param>
             <returns>ApiResponse</returns>
            </member>
        <member name="T:IO.Swagger.Api.PetApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Api.PetApi.#ctor(IO.Swagger.Client.ApiClient)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Api.PetApi" /> class.
             </summary>
             <param name="apiClient"> an instance of ApiClient (optional)</param>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.PetApi.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Api.PetApi" /> class.
             </summary>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.PetApi.SetBasePath(System.String)">
             <summary>
             Sets the base path of the API client.
             </summary>
             <param name="basePath">The base path</param>
             <value>The base path</value>
            </member>
        <member name="M:IO.Swagger.Api.PetApi.GetBasePath(System.String)">
             <summary>
             Gets the base path of the API client.
             </summary>
             <param name="basePath">The base path</param>
             <value>The base path</value>
            </member>
        <member name="P:IO.Swagger.Api.PetApi.ApiClient">
             <summary>
             Gets or sets the API client.
             </summary>
             <value>An instance of the ApiClient</value>
            </member>
        <member name="M:IO.Swagger.Api.PetApi.AddPet(IO.Swagger.Model.Pet)">
             <summary>
             Add a new pet to the store 
             </summary>
             <param name="body">Pet object that needs to be added to the store</param> 
             <returns></returns>            
            </member>
        <member name="M:IO.Swagger.Api.PetApi.DeletePet(System.Nullable{System.Int64},System.String)">
             <summary>
             Deletes a pet 
             </summary>
             <param name="petId">Pet id to delete</param> 
             <param name="apiKey"></param> 
             <returns></returns>            
            </member>
        <member name="M:IO.Swagger.Api.PetApi.FindPetsByStatus(System.Collections.Generic.List{System.String})">
             <summary>
             Finds Pets by status Multiple status values can be provided with comma separated strings
             </summary>
             <param name="status">Status values that need to be considered for filter</param> 
             <returns>List&lt;Pet&gt;</returns>            
            </member>
        <member name="M:IO.Swagger.Api.PetApi.FindPetsByTags(System.Collections.Generic.List{System.String})">
             <summary>
             Finds Pets by tags Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
             </summary>
             <param name="tags">Tags to filter by</param> 
             <returns>List&lt;Pet&gt;</returns>            
            </member>
        <member name="M:IO.Swagger.Api.PetApi.GetPetById(System.Nullable{System.Int64})">
             <summary>
             Find pet by ID Returns a single pet
             </summary>
             <param name="petId">ID of pet to return</param> 
             <returns>Pet</returns>            
            </member>
        <member name="M:IO.Swagger.Api.PetApi.UpdatePet(IO.Swagger.Model.Pet)">
             <summary>
             Update an existing pet 
             </summary>
             <param name="body">Pet object that needs to be added to the store</param> 
             <returns></returns>            
            </member>
        <member name="M:IO.Swagger.Api.PetApi.UpdatePetWithForm(System.Nullable{System.Int64},System.String,System.String)">
             <summary>
             Updates a pet in the store with form data 
             </summary>
             <param name="petId">ID of pet that needs to be updated</param> 
             <param name="name">Updated name of the pet</param> 
             <param name="status">Updated status of the pet</param> 
             <returns></returns>            
            </member>
        <member name="M:IO.Swagger.Api.PetApi.UploadFile(System.Nullable{System.Int64},System.String,System.IO.Stream)">
             <summary>
             uploads an image 
             </summary>
             <param name="petId">ID of pet to update</param> 
             <param name="additionalMetadata">Additional data to pass to server</param> 
             <param name="_file">file to upload</param> 
             <returns>ApiResponse</returns>            
            </member>
        <member name="T:IO.Swagger.Api.IUserApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Api.IUserApi.CreateUser(IO.Swagger.Model.User)">
             <summary>
             Create user This can only be done by the logged in user.
             </summary>
             <param name="body">Created user object</param>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.IUserApi.CreateUsersWithArrayInput(System.Collections.Generic.List{IO.Swagger.Model.User})">
             <summary>
             Creates list of users with given input array 
             </summary>
             <param name="body">List of user object</param>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.IUserApi.CreateUsersWithListInput(System.Collections.Generic.List{IO.Swagger.Model.User})">
             <summary>
             Creates list of users with given input array 
             </summary>
             <param name="body">List of user object</param>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.IUserApi.DeleteUser(System.String)">
             <summary>
             Delete user This can only be done by the logged in user.
             </summary>
             <param name="username">The name that needs to be deleted</param>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.IUserApi.GetUserByName(System.String)">
             <summary>
             Get user by user name 
             </summary>
             <param name="username">The name that needs to be fetched. Use user1 for testing.</param>
             <returns>User</returns>
            </member>
        <member name="M:IO.Swagger.Api.IUserApi.LoginUser(System.String,System.String)">
             <summary>
             Logs user into the system 
             </summary>
             <param name="username">The user name for login</param>
             <param name="password">The password for login in clear text</param>
             <returns>string</returns>
            </member>
        <member name="M:IO.Swagger.Api.IUserApi.LogoutUser">
             <summary>
             Logs out current logged in user session 
             </summary>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.IUserApi.UpdateUser(System.String,IO.Swagger.Model.User)">
             <summary>
             Updated user This can only be done by the logged in user.
             </summary>
             <param name="username">name that need to be deleted</param>
             <param name="body">Updated user object</param>
             <returns></returns>
            </member>
        <member name="T:IO.Swagger.Api.UserApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:IO.Swagger.Api.UserApi.#ctor(IO.Swagger.Client.ApiClient)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Api.UserApi" /> class.
             </summary>
             <param name="apiClient"> an instance of ApiClient (optional)</param>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.UserApi.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Api.UserApi" /> class.
             </summary>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Api.UserApi.SetBasePath(System.String)">
             <summary>
             Sets the base path of the API client.
             </summary>
             <param name="basePath">The base path</param>
             <value>The base path</value>
            </member>
        <member name="M:IO.Swagger.Api.UserApi.GetBasePath(System.String)">
             <summary>
             Gets the base path of the API client.
             </summary>
             <param name="basePath">The base path</param>
             <value>The base path</value>
            </member>
        <member name="P:IO.Swagger.Api.UserApi.ApiClient">
             <summary>
             Gets or sets the API client.
             </summary>
             <value>An instance of the ApiClient</value>
            </member>
        <member name="M:IO.Swagger.Api.UserApi.CreateUser(IO.Swagger.Model.User)">
             <summary>
             Create user This can only be done by the logged in user.
             </summary>
             <param name="body">Created user object</param> 
             <returns></returns>            
            </member>
        <member name="M:IO.Swagger.Api.UserApi.CreateUsersWithArrayInput(System.Collections.Generic.List{IO.Swagger.Model.User})">
             <summary>
             Creates list of users with given input array 
             </summary>
             <param name="body">List of user object</param> 
             <returns></returns>            
            </member>
        <member name="M:IO.Swagger.Api.UserApi.CreateUsersWithListInput(System.Collections.Generic.List{IO.Swagger.Model.User})">
             <summary>
             Creates list of users with given input array 
             </summary>
             <param name="body">List of user object</param> 
             <returns></returns>            
            </member>
        <member name="M:IO.Swagger.Api.UserApi.DeleteUser(System.String)">
             <summary>
             Delete user This can only be done by the logged in user.
             </summary>
             <param name="username">The name that needs to be deleted</param> 
             <returns></returns>            
            </member>
        <member name="M:IO.Swagger.Api.UserApi.GetUserByName(System.String)">
             <summary>
             Get user by user name 
             </summary>
             <param name="username">The name that needs to be fetched. Use user1 for testing.</param> 
             <returns>User</returns>            
            </member>
        <member name="M:IO.Swagger.Api.UserApi.LoginUser(System.String,System.String)">
             <summary>
             Logs user into the system 
             </summary>
             <param name="username">The user name for login</param> 
             <param name="password">The password for login in clear text</param> 
             <returns>string</returns>            
            </member>
        <member name="M:IO.Swagger.Api.UserApi.LogoutUser">
             <summary>
             Logs out current logged in user session 
             </summary>
             <returns></returns>            
            </member>
        <member name="M:IO.Swagger.Api.UserApi.UpdateUser(System.String,IO.Swagger.Model.User)">
             <summary>
             Updated user This can only be done by the logged in user.
             </summary>
             <param name="username">name that need to be deleted</param> 
             <param name="body">Updated user object</param> 
             <returns></returns>            
            </member>
        <member name="T:IO.Swagger.Client.ApiClient">
             <summary>
             API client is mainly responible for making the HTTP call to the API backend.
             </summary>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiClient" /> class.
             </summary>
             <param name="basePath">The base path.</param>
            </member>
        <member name="P:IO.Swagger.Client.ApiClient.BasePath">
             <summary>
             Gets or sets the base path.
             </summary>
             <value>The base path</value>
            </member>
        <member name="P:IO.Swagger.Client.ApiClient.RestClient">
             <summary>
             Gets or sets the RestClient.
             </summary>
             <value>An instance of the RestClient</value>
            </member>
        <member name="P:IO.Swagger.Client.ApiClient.DefaultHeader">
             <summary>
             Gets the default header.
             </summary>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.String[])">
             <summary>
             Makes the HTTP request (Sync).
             </summary>
             <param name="path">URL path.</param>
             <param name="method">HTTP method.</param>
             <param name="queryParams">Query parameters.</param>
             <param name="postBody">HTTP body (POST request).</param>
             <param name="headerParams">Header parameters.</param>
             <param name="formParams">Form parameters.</param>
             <param name="fileParams">File parameters.</param>
             <param name="authSettings">Authentication settings.</param>
             <returns>Object</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.AddDefaultHeader(System.String,System.String)">
             <summary>
             Add default header.
             </summary>
             <param name="key">Header field name.</param>
             <param name="value">Header field value.</param>
             <returns></returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.EscapeString(System.String)">
             <summary>
             Escape string (url-encoded).
             </summary>
             <param name="str">String to be escaped.</param>
             <returns>Escaped string.</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
             <summary>
             Create FileParameter based on Stream.
             </summary>
             <param name="name">Parameter name.</param>
             <param name="stream">Input stream.</param>
             <returns>FileParameter.</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.ParameterToString(System.Object)">
             <summary>
             If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.
             If parameter is a list of string, join the list with ",".
             Otherwise just return the string.
             </summary>
             <param name="obj">The parameter (header, path, query, form).</param>
             <returns>Formatted string.</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.Deserialize(System.String,System.Type,System.Collections.Generic.IList{RestSharp.Parameter})">
             <summary>
             Deserialize the JSON string into a proper object.
             </summary>
             <param name="content">HTTP body (e.g. string, JSON).</param>
             <param name="type">Object type.</param>
             <param name="headers">HTTP headers.</param>
             <returns>Object representation of the JSON string.</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.Serialize(System.Object)">
             <summary>
             Serialize an object into JSON string.
             </summary>
             <param name="obj">Object.</param>
             <returns>JSON string.</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.GetApiKeyWithPrefix(System.String)">
             <summary>
             Get the API key with prefix.
             </summary>
             <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
             <returns>API key with prefix.</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.UpdateParamsForAuth(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String[])">
             <summary>
             Update parameters based on authentication.
             </summary>
             <param name="queryParams">Query parameters.</param>
             <param name="headerParams">Header parameters.</param>
             <param name="authSettings">Authentication settings.</param>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.Base64Encode(System.String)">
             <summary>
             Encode string in base64 format.
             </summary>
             <param name="text">String to be encoded.</param>
             <returns>Encoded string.</returns>
            </member>
        <member name="M:IO.Swagger.Client.ApiClient.ConvertType(System.Object,System.Type)">
             <summary>
             Dynamically cast the object into target type.
             </summary>
             <param name="fromObject">Object to be casted</param>
             <param name="toObject">Target type</param>
             <returns>Casted object</returns>
            </member>
        <member name="T:IO.Swagger.Client.Configuration">
             <summary>
             Represents a set of configuration settings
             </summary>
            </member>
        <member name="F:IO.Swagger.Client.Configuration.Version">
             <summary>
             Version of the package.
             </summary>
             <value>Version of the package.</value>
            </member>
        <member name="F:IO.Swagger.Client.Configuration.DefaultApiClient">
             <summary>
             Gets or sets the default API client for making HTTP calls.
             </summary>
             <value>The API client.</value>
            </member>
        <member name="P:IO.Swagger.Client.Configuration.Username">
             <summary>
             Gets or sets the username (HTTP basic authentication).
             </summary>
             <value>The username.</value>
            </member>
        <member name="P:IO.Swagger.Client.Configuration.Password">
             <summary>
             Gets or sets the password (HTTP basic authentication).
             </summary>
             <value>The password.</value>
            </member>
        <member name="F:IO.Swagger.Client.Configuration.ApiKey">
             <summary>
             Gets or sets the API key based on the authentication name.
             </summary>
             <value>The API key.</value>
            </member>
        <member name="F:IO.Swagger.Client.Configuration.ApiKeyPrefix">
             <summary>
             Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
             </summary>
             <value>The prefix of the API key.</value>
            </member>
        <member name="P:IO.Swagger.Client.Configuration.TempFolderPath">
             <summary>
             Gets or sets the temporary folder path to store the files downloaded from the server.
             </summary>
             <value>Folder path.</value>
            </member>
        <member name="P:IO.Swagger.Client.Configuration.DateTimeFormat">
             <summary>
             Gets or sets the date time format used when serializing in the ApiClient
             By default, it's set to ISO 8601 - "o", for others see:
             https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
             and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
             No validation is done to ensure that the string you're providing is valid
             </summary>
             <value>The DateTimeFormat string</value>
            </member>
        <member name="M:IO.Swagger.Client.Configuration.ToDebugReport">
             <summary>
             Returns a string with essential information for debugging.
             </summary>
            </member>
        <member name="T:IO.Swagger.Client.ApiException">
             <summary>
             API Exception
             </summary>
            </member>
        <member name="P:IO.Swagger.Client.ApiException.ErrorCode">
             <summary>
             Gets or sets the error code (HTTP status code)
             </summary>
             <value>The error code (HTTP status code).</value>
            </member>
        <member name="P:IO.Swagger.Client.ApiException.ErrorContent">
             <summary>
             Gets or sets the error content (body json object)
             </summary>
             <value>The error content (Http response body).</value>
            </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException" /> class.
             </summary>
            </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor(System.Int32,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException" /> class.
             </summary>
             <param name="errorCode">HTTP status code.</param>
             <param name="message">Error message.</param>
            </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor(System.Int32,System.String,System.Object)">
             <summary>
             Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException" /> class.
             </summary>
             <param name="errorCode">HTTP status code.</param>
             <param name="message">Error message.</param>
             <param name="errorContent">Error content.</param>
            </member>
    </members>
</doc>
