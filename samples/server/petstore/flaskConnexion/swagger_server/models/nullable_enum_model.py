# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class NullableEnumModel(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, enum_prop: str=None):  # noqa: E501
        """NullableEnumModel - a model defined in Swagger

        :param enum_prop: The enum_prop of this NullableEnumModel.  # noqa: E501
        :type enum_prop: str
        """
        self.swagger_types = {
            'enum_prop': str
        }

        self.attribute_map = {
            'enum_prop': 'enumProp'
        }
        self._enum_prop = enum_prop

    @classmethod
    def from_dict(cls, dikt) -> 'NullableEnumModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NullableEnumModel of this NullableEnumModel.  # noqa: E501
        :rtype: NullableEnumModel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enum_prop(self) -> str:
        """Gets the enum_prop of this NullableEnumModel.


        :return: The enum_prop of this NullableEnumModel.
        :rtype: str
        """
        return self._enum_prop

    @enum_prop.setter
    def enum_prop(self, enum_prop: str):
        """Sets the enum_prop of this NullableEnumModel.


        :param enum_prop: The enum_prop of this NullableEnumModel.
        :type enum_prop: str
        """
        allowed_values = ["a", "b", ""]  # noqa: E501
        if enum_prop not in allowed_values:
            raise ValueError(
                "Invalid value for `enum_prop` ({0}), must be one of {1}"
                .format(enum_prop, allowed_values)
            )

        self._enum_prop = enum_prop
