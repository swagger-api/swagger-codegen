/**
* Swagger Petstore
* This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
*
* OpenAPI spec version: 1.0.0
* Contact: apiteam@swagger.io
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "Amount.h"

namespace io {
namespace swagger {
namespace server {
namespace model {

Amount::Amount()
{
    m_Value = 0.0;
    
}

Amount::~Amount()
{
}

void Amount::validate()
{
    // TODO: implement validation
}

nlohmann::json Amount::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["value"] = m_Value;
    val["currency"] = ModelBase::toJson(m_Currency);
    

    return val;
}

void Amount::fromJson(nlohmann::json& val)
{
    setValue(val.at("value"));
    
    std::shared_ptr<Currency> newItem(new Currency());
    newItem->fromJson(val.at("currency"));
    setCurrency( newItem );
    
}


double Amount::getValue() const
{
    return m_Value;
}
void Amount::setValue(double value)
{
    m_Value = value;
    
}
std::shared_ptr<Currency> Amount::getCurrency() const
{
    return m_Currency;
}
void Amount::setCurrency(std::shared_ptr<Currency> value)
{
    m_Currency = value;
    
}

}
}
}
}

