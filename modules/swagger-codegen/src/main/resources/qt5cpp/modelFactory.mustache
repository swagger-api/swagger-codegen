{{>licenseInfo}}
#ifndef ModelFactory_H_
#define ModelFactory_H_

#include "{{prefix}}Object.h"
{{#models}}{{#model}}
#include "{{classname}}.h"{{/model}}{{/models}}

{{#cppNamespaceDeclarations}}
namespace {{this}} {
{{/cppNamespaceDeclarations}}

  inline void* create(QString type) {
    {{#models}}{{#model}}if(QString("{{classname}}").compare(type) == 0) {
      return new {{classname}}();
    }
    {{/model}}{{/models}}
    return nullptr;
  }

  {{#models}}{{#model}}
  inline void create(QString json, QString type, {{classname}}** ptr ) { 
    auto val = static_cast<{{prefix}}Object*>(create(type));
    if(val != nullptr) {
      *ptr = static_cast<{{classname}}*>(val->fromJson(json));
    }
  }
  {{/model}}{{/models}}

  inline void create(QString json, QString type, QString* str){
        if(type.startsWith("QString")) {
      *str = QString();
    }   
  }


{{#cppNamespaceDeclarations}}
}
{{/cppNamespaceDeclarations}}

#endif /* ModelFactory_H_ */
