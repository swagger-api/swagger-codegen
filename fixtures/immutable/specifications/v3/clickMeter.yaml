openapi: 3.0.0
servers:
  - url: http://apiv2.clickmeter.com:80
  - url: https://apiv2.clickmeter.com:80
info:
  contact:
    email: api@clickmeter.com
    name: Api Support
    url: http://www.clickmeter.com/api
  description: Api dashboard for ClickMeter API
  title: ClickMeter API
  version: v2
  x-apisguru-categories:
    - marketing
  x-logo:
    url: https://s3.amazonaws.com/clickmeter.com/Web/static/cmlogo.svg
  x-origin:
    - format: openapi
      url: http://api.v2.clickmeter.com.s3.amazonaws.com/docs/api-docs-v2.json
      version: "3.0"
  x-providerName: clickmeter.com
security:
  - api_key: []
paths:
  /account:
    get:
      deprecated: false
      operationId: Account_Get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve current account data
      tags:
        - Account
    post:
      deprecated: false
      operationId: Account_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
          application/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
          text/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Update current account data
      tags:
        - Account
  /account/domainwhitelist:
    get:
      deprecated: false
      operationId: Account_GetDomainWhitelist
      parameters:
        - description: Offset where to start from
          in: query
          name: offset
          required: false
          schema:
            format: int32
            minLength: 0
            type: integer
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ac\
                  counting.DomainWhitelistEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ac\
                  counting.DomainWhitelistEntry_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve list of a domains allowed to redirect in DDU mode
      tags:
        - Account
    post:
      deprecated: false
      operationId: Account_PutDomainWhitelist
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry"
          application/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry"
          text/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry"
        description: The entry to add
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Create an domain entry
      tags:
        - Account
  "/account/domainwhitelist/{whitelistId}":
    delete:
      deprecated: false
      operationId: Account_DeleteDomainWhitelist
      parameters:
        - description: The id of the domain to delete
          in: path
          name: whitelistId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete an domain entry
      tags:
        - Account
  /account/guests:
    get:
      deprecated: false
      operationId: Account_GetGuests
      parameters:
        - description: Offset where to start from
          in: query
          name: offset
          required: false
          schema:
            format: int32
            minLength: 0
            type: integer
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Field to sort by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
        - description: Direction of sort "asc" or "desc"
          in: query
          name: sortDirection
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve list of a guest
      tags:
        - Account
    post:
      deprecated: false
      operationId: Account_PutGuest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
          application/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
          text/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
        description: Guest object to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Create a guest
      tags:
        - Account
  /account/guests/count:
    get:
      deprecated: false
      operationId: Account_GetGuestsCount
      parameters:
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve count of guests
      tags:
        - Account
  "/account/guests/{guestId}":
    delete:
      deprecated: false
      operationId: Account_DeleteGuest
      parameters:
        - description: Id of the guest
          in: path
          name: guestId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete a guest
      tags:
        - Account
    get:
      deprecated: false
      operationId: Account_GetGuest
      parameters:
        - description: Id of the guest
          in: path
          name: guestId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve a guest
      tags:
        - Account
    post:
      deprecated: false
      operationId: Account_PostGuest
      parameters:
        - description: Id of the guest
          in: path
          name: guestId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
          application/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
          text/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
        description: Guest object with field updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Guest"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Update a guest
      tags:
        - Account
  "/account/guests/{guestId}/permissions":
    get:
      deprecated: false
      operationId: Account_GetPermissions
      parameters:
        - description: Id of the guest
          in: path
          name: guestId
          required: true
          schema:
            format: int64
            type: integer
        - description: Can be "datapoint" or "group"
          in: query
          name: entityType
          required: false
          schema:
            enum:
              - datapoint
              - group
            type: string
        - description: Offset where to start from
          in: query
          name: offset
          required: false
          schema:
            format: int32
            minLength: 0
            type: integer
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Can be "w" or "r"
          in: query
          name: type
          required: false
          schema:
            enum:
              - r
              - w
            type: string
        - description: Optional id of the datapoint/group entity to filter by
          in: query
          name: entityId
          required: false
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Gr\
                  ants.Grant_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Gr\
                  ants.Grant_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve permissions for a guest
      tags:
        - Account
  "/account/guests/{guestId}/permissions/count":
    get:
      deprecated: false
      operationId: Account_GetPermissionsCount
      parameters:
        - description: Id of the guest
          in: path
          name: guestId
          required: true
          schema:
            format: int64
            type: integer
        - description: Can be "datapoint" or "group"
          in: query
          name: entityType
          required: false
          schema:
            enum:
              - datapoint
              - group
            type: string
        - description: Can be "w" or "r"
          in: query
          name: type
          required: false
          schema:
            enum:
              - r
              - w
            type: string
        - description: Optional id of the datapoint/group entity to filter by
          in: query
          name: entityId
          required: false
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve count of the permissions for a guest
      tags:
        - Account
  "/account/guests/{guestId}/{type}/permissions/patch":
    post:
      deprecated: false
      parameters:
        - description: Id of the guest
          in: path
          name: guestId
          required: true
          schema:
            format: int64
            type: integer
        - description: Can be "datapoint" or "group"
          in: path
          name: type
          required: true
          schema:
            enum:
              - datapoint
              - group
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Api.Core.Requests.PermissionPatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Change the permission on a shared object
      tags:
        - Account
    put:
      deprecated: false
      operationId: Account_PatchPermissions
      parameters:
        - description: Id of the guest
          in: path
          name: guestId
          required: true
          schema:
            format: int64
            type: integer
        - description: Can be "datapoint" or "group"
          in: path
          name: type
          required: true
          schema:
            enum:
              - datapoint
              - group
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Api.Core.Requests.PermissionPatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Change the permission on a shared object
      tags:
        - Account
  /account/ipblacklist:
    get:
      deprecated: false
      operationId: Account_GetIpBlacklist
      parameters:
        - description: Offset where to start from
          in: query
          name: offset
          required: false
          schema:
            format: int32
            minLength: 0
            type: integer
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ac\
                  counting.IpBlacklistEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ac\
                  counting.IpBlacklistEntry_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve list of a ip to exclude from event tracking
      tags:
        - Account
    post:
      deprecated: false
      operationId: Account_PutIpBlacklist
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry"
          application/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry"
          text/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry"
        description: The entry to add
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Create an ip blacklist entry
      tags:
        - Account
  "/account/ipblacklist/{blacklistId}":
    delete:
      deprecated: false
      operationId: Account_DeleteIpBlacklist
      parameters:
        - description: The id of the ip to delete
          in: path
          name: blacklistId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete an ip blacklist entry
      tags:
        - Account
  /account/plan:
    get:
      deprecated: false
      operationId: Account_GetPlan
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Plan"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Plan"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Plan"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Plan"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve current account plan
      tags:
        - Account
  /aggregated:
    get:
      deprecated: false
      operationId: Aggregated_GetStatisticsSingle
      parameters:
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: If using "yesterday" or "today" timeframe you can ask for the
            hourly detail
          in: query
          name: hourly
          required: false
          schema:
            type: boolean
        - description: ""
          in: query
          name: onlyFavorites
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this customer for a timeframe
      tags:
        - Aggregated
  /aggregated/list:
    get:
      deprecated: false
      operationId: Aggregated_GetStatisticsList
      parameters:
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: The temporal entity you want to group by ("week"/"month"). If
            unspecified is "day".
          in: query
          name: groupBy
          required: false
          schema:
            enum:
              - week
              - month
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ag\
                  gregated.AggregatedResult_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ag\
                  gregated.AggregatedResult_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this customer for a timeframe grouped by some
        temporal entity (day/week/month)
      tags:
        - Aggregated
  /aggregated/summary/conversions:
    get:
      deprecated: false
      operationId: Aggregated_GetConversionsSummary
      parameters:
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: Status of conversion ("deleted"/"active")
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
            type: string
        - description: Field to sort by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
        - description: Direction of sort "asc" or "desc"
          in: query
          name: sortDirection
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - description: Offset where to start from
          in: query
          name: offset
          required: false
          schema:
            format: int32
            minLength: 0
            type: integer
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about a subset of conversions for a timeframe with
        conversions data
      tags:
        - Aggregated
  /aggregated/summary/datapoints:
    get:
      deprecated: false
      operationId: Aggregated_GetDatapointsSummary
      parameters:
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: Type of datapoint ("tl"/"tp")
          in: query
          name: type
          required: true
          schema:
            enum:
              - tp
              - tl
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: Status of datapoint ("deleted"/"active"/"paused"/"spam")
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
              - paused
              - spam
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tag
          required: false
          schema:
            type: string
        - description: Is the datapoint marked as favourite
          in: query
          name: favourite
          required: false
          schema:
            type: boolean
        - description: Field to sort by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
        - description: Direction of sort "asc" or "desc"
          in: query
          name: sortDirection
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - description: Offset where to start from
          in: query
          name: offset
          required: false
          schema:
            format: int32
            minLength: 0
            type: integer
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Filter by this group id
          in: query
          name: groupId
          required: false
          schema:
            format: int64
            type: integer
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about a subset of datapoints for a timeframe with
        datapoints data
      tags:
        - Aggregated
  /aggregated/summary/groups:
    get:
      deprecated: false
      operationId: Aggregated_GetGroupsSummary
      parameters:
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: Status of group ("deleted"/"active")
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tag
          required: false
          schema:
            type: string
        - description: Is the group marked as favourite
          in: query
          name: favourite
          required: false
          schema:
            type: boolean
        - description: Field to sort by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
        - description: Direction of sort "asc" or "desc"
          in: query
          name: sortDirection
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - description: Offset where to start from
          in: query
          name: offset
          required: false
          schema:
            format: int32
            minLength: 0
            type: integer
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about a subset of groups for a timeframe with
        groups data
      tags:
        - Aggregated
  /clickstream:
    get:
      deprecated: false
      operationId: ClickStream_Get
      parameters:
        - description: Filter by this group id (mutually exclusive with "datapoint" and
            "conversion")
          in: query
          name: group
          required: false
          schema:
            format: int64
            type: integer
        - description: Filter by this datapoint id (mutually exclusive with "group" and
            "conversion")
          in: query
          name: datapoint
          required: false
          schema:
            format: int64
            type: integer
        - description: Filter by this conversion id (mutually exclusive with "datapoint"
            and "group")
          in: query
          name: conversion
          required: false
          schema:
            format: int64
            type: integer
        - description: Limit results to this number
          in: query
          name: pageSize
          required: false
          schema:
            default: 50
            format: int32
            type: integer
        - description: Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
          in: query
          name: filter
          required: false
          schema:
            enum:
              - ""
              - spiders
              - uniques
              - nonuniques
              - conversions
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Cl\
                  ickStream.Hit_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Cl\
                  ickStream.Hit_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve the latest list of events of this account. Limited to last 100.
      tags:
        - ClickStream
  /conversions:
    get:
      deprecated: false
      operationId: Conversions_Get
      parameters:
        - description: Offset where to start from
          in: query
          name: offset
          required: false
          schema:
            format: int32
            minLength: 0
            type: integer
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Status of conversion ("deleted"/"active")
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Exclude conversions created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude conversions created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve a list of conversions
      tags:
        - Conversions
    post:
      deprecated: false
      operationId: Conversions_Put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Conversions.Conversion"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Conversions.Conversion"
          application/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Conversions.Conversion"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Conversions.Conversion"
          text/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Conversions.Conversion"
        description: The body of the conversion
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Create a conversion
      tags:
        - Conversions
  /conversions/aggregated/list:
    get:
      deprecated: false
      operationId: Conversions_GetStatisticsAllList
      parameters:
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: Status of conversion ("deleted"/"active")
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
            type: string
        - description: The temporal entity you want to group by ("week"/"month"). If
            unspecified is "day".
          in: query
          name: groupBy
          required: false
          schema:
            enum:
              - week
              - month
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ag\
                  gregated.AggregatedResult_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ag\
                  gregated.AggregatedResult_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this customer for a timeframe related to a
        subset of conversions grouped by some temporal entity (day/week/month)
      tags:
        - Conversions
  /conversions/count:
    get:
      deprecated: false
      operationId: Conversions_Count
      parameters:
        - description: Status of conversion ("deleted"/"active")
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Exclude conversions created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude conversions created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve a count of conversions
      tags:
        - Conversions
  "/conversions/{conversionId}":
    delete:
      deprecated: false
      operationId: Conversions_Delete
      parameters:
        - description: Id of the conversion
          in: path
          name: conversionId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Delete conversion specified by id
      tags:
        - Conversions
    get:
      deprecated: false
      parameters:
        - description: Id of the conversion
          in: path
          name: conversionId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Conversions.Conversion"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Conversions.Conversion"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Conversions.Conversion"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Conversions.Conversion"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Retrieve conversion specified by id
      tags:
        - Conversions
    post:
      deprecated: false
      operationId: Conversions_Post
      parameters:
        - description: Id of the conversion
          in: path
          name: conversionId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Conversions.Conversion"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Conversions.Conversion"
          application/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Conversions.Conversion"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Conversions.Conversion"
          text/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Conversions.Conversion"
        description: Updated body of the conversion
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Update conversion specified by id
      tags:
        - Conversions
  "/conversions/{conversionId}/aggregated":
    get:
      deprecated: false
      operationId: Conversions_GetStatisticsSingle
      parameters:
        - description: Id of the conversion
          in: path
          name: conversionId
          required: true
          schema:
            format: int64
            type: integer
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: Filter by this tag name
          in: query
          name: tag
          required: false
          schema:
            type: string
        - description: Is the datapoint marked as favourite
          in: query
          name: favourite
          required: false
          schema:
            type: boolean
        - description: If using "yesterday" or "today" timeframe you can ask for the
            hourly detail
          in: query
          name: hourly
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this conversion for a timeframe
      tags:
        - Conversions
  "/conversions/{conversionId}/aggregated/list":
    get:
      deprecated: false
      operationId: Conversions_GetStatisticsList
      parameters:
        - description: Id of the conversion
          in: path
          name: conversionId
          required: true
          schema:
            format: int64
            type: integer
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: The temporal entity you want to group by ("week"/"month"). If
            unspecified is "day".
          in: query
          name: groupBy
          required: false
          schema:
            enum:
              - week
              - month
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ag\
                  gregated.AggregatedResult_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ag\
                  gregated.AggregatedResult_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this conversion for a timeframe grouped by
        some temporal entity (day/week/month)
      tags:
        - Conversions
  "/conversions/{conversionId}/datapoints":
    get:
      deprecated: false
      operationId: Conversions_GetDatapoints
      parameters:
        - description: Id of the conversion
          in: path
          name: conversionId
          required: true
          schema:
            format: int64
            type: integer
        - description: Offset where to start from
          in: query
          name: offset
          required: false
          schema:
            format: int32
            minLength: 0
            type: integer
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Type of datapoint ("tl"/"tp")
          in: query
          name: type
          required: false
          schema:
            enum:
              - tp
              - tl
            type: string
        - description: Status of datapoint ("deleted"/"active"/"paused"/"spam")
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
              - paused
              - spam
            type: string
        - description: Filter by this tag name
          in: query
          name: tags
          required: false
          schema:
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Exclude datapoints created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude datapoints created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve a list of datapoints connected to this conversion
      tags:
        - Conversions
  "/conversions/{conversionId}/datapoints/batch/patch":
    put:
      deprecated: false
      parameters:
        - description: Id of the conversion
          in: path
          name: conversionId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.PatchBodyBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.PatchBodyBatch"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.PatchBodyBatch"
        description: Patch requests
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Modify the association between a conversion and multiple datapoints
      tags:
        - Conversions
  "/conversions/{conversionId}/datapoints/count":
    get:
      deprecated: false
      operationId: Conversions_GetDatapointsCount
      parameters:
        - description: Id of the conversion
          in: path
          name: conversionId
          required: true
          schema:
            format: int64
            type: integer
        - description: Type of datapoint ("tl"/"tp")
          in: query
          name: type
          required: false
          schema:
            type: string
        - description: Status of datapoint ("deleted"/"active"/"paused"/"spam")
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: Filter by this tag name
          in: query
          name: tags
          required: false
          schema:
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Exclude datapoints created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude datapoints created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve a count of datapoints connected to this conversion
      tags:
        - Conversions
  "/conversions/{conversionId}/datapoints/patch":
    put:
      deprecated: false
      operationId: Conversions_Patch
      parameters:
        - description: Id of the conversion
          in: path
          name: conversionId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.ConversionPatchBody"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.ConversionPatchBody"
          application/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.ConversionPatchBody"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.ConversionPatchBody"
          text/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.ConversionPatchBody"
        description: Patch request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Modify the association between a conversion and a datapoint
      tags:
        - Conversions
  "/conversions/{conversionId}/hits":
    get:
      deprecated: false
      operationId: Conversions_GetHits
      parameters:
        - description: Id of the conversion
          in: path
          name: conversionId
          required: true
          schema:
            format: int64
            type: integer
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeframe
          required: true
          schema:
            enum:
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - custom
            type: string
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Offset where to start from (it's the lastKey field in the response
            object)
          in: query
          name: offset
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
          in: query
          name: filter
          required: false
          schema:
            enum:
              - spiders
              - uniques
              - nonuniques
              - conversions
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitListPage"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitListPage"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve the list of events related to this conversion.
      tags:
        - Conversions
  "/conversions/{conversionId}/notes":
    put:
      deprecated: false
      operationId: Conversions_PatchNotes
      parameters:
        - description: Id of the conversion
          in: path
          name: conversionId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Api.Core.Requests.GenericTextPatch"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Fast patch the "notes" field of a conversion
      tags:
        - Conversions
  "/conversions/{conversionId}/reports":
    get:
      deprecated: false
      operationId: Conversions_GetTops
      parameters:
        - description: Id of the conversion
          in: path
          name: conversionId
          required: true
          schema:
            format: int64
            type: integer
        - description: Type of the report.
          in: query
          name: type
          required: true
          schema:
            enum:
              - datapoints
              - groups
              - browsers
              - browsersfamilies
              - platforms
              - cities
              - countries
              - keywords
              - referrers
              - convparameters
              - destinations
              - languages
              - params
            type: string
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeframe
          required: true
          schema:
            enum:
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - beginning
              - custom
            type: string
        - description: Type of the event you want to filter this report with. By default
            no filter is applied.
          in: query
          name: hittype
          required: false
          schema:
            enum:
              - clicks
              - views
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Tops.Top"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Tops.Top"
          description: ""
        "401":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Retrieve a top report connected to this conversion
      tags:
        - Conversions
  /datapoints:
    get:
      deprecated: false
      operationId: DataPoints_Get
      parameters:
        - description: Where to start when retrieving elements. Default is 0 if not
            specified.
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            minLength: 0
            type: integer
        - description: Maximum elements to retrieve. Default to 20 if not specified.
          in: query
          name: limit
          required: false
          schema:
            default: 20
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Type of the datapoint ("tp"/"tl")
          in: query
          name: type
          required: false
          schema:
            enum:
              - tp
              - tl
            type: string
        - description: Status of the datapoint
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
              - paused
              - spam
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tags
          required: false
          schema:
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Filter fields by favourite status
          in: query
          name: onlyFavorites
          required: false
          schema:
            type: boolean
        - description: Field to sort by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
        - description: Direction of sort "asc" or "desc"
          in: query
          name: sortDirection
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - description: Exclude datapoints created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude datapoints created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the datapoints associated to the user
      tags:
        - DataPoints
    post:
      deprecated: false
      operationId: DataPoints_Put
      requestBody:
        $ref: "#/components/requestBodies/Api.Core.Dto.Datapoints.Datapoint"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Create a datapoint
      tags:
        - DataPoints
  /datapoints/aggregated:
    get:
      deprecated: false
      operationId: DataPoints_GetStatisticsAggregatedSingle
      parameters:
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: Type of datapoint ("tl"/"tp")
          in: query
          name: type
          required: false
          schema:
            enum:
              - tp
              - tl
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: If using "yesterday" or "today" timeframe you can ask for the
            hourly detail
          in: query
          name: hourly
          required: false
          schema:
            type: boolean
        - description: Status of datapoint ("deleted"/"active"/"paused"/"spam")
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
              - paused
              - spam
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tag
          required: false
          schema:
            type: string
        - description: Is the datapoint is marked as favourite
          in: query
          name: favourite
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this customer for a timeframe by groups
      tags:
        - DataPoints
  /datapoints/aggregated/list:
    get:
      deprecated: false
      operationId: DataPoints_GetStatisticsAllList
      parameters:
        - description: Type of datapoint ("tl"/"tp")
          in: query
          name: type
          required: true
          schema:
            enum:
              - tp
              - tl
            type: string
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: Status of datapoint ("deleted"/"active"/"paused"/"spam")
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
              - paused
              - spam
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tag
          required: false
          schema:
            type: string
        - description: Is the datapoint is marked as favourite
          in: query
          name: favourite
          required: false
          schema:
            type: boolean
        - description: The temporal entity you want to group by ("week"/"month"). If
            unspecified is "day".
          in: query
          name: groupBy
          required: false
          schema:
            enum:
              - week
              - month
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ag\
                  gregated.AggregatedResult_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ag\
                  gregated.AggregatedResult_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about all datapoints of this customer for a
        timeframe grouped by some temporal entity (day/week/month)
      tags:
        - DataPoints
  /datapoints/batch:
    delete:
      deprecated: false
      operationId: DataPoints_BatchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.DeleteBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.DeleteBatch"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.DeleteBatch"
        description: A json containing the datapoints to delete.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.ModifyBatchItemResponce_Api.Core\
                  .Dto.Datapoints.Datapoint_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.ModifyBatchItemResponce_Api.Core\
                  .Dto.Datapoints.Datapoint_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Delete multiple datapoints
      tags:
        - DataPoints
    post:
      deprecated: false
      operationId: DataPoints_BatchPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.DatapointsBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.DatapointsBatch"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.DatapointsBatch"
        description: A json containing the datapoints to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.ModifyBatchItemResponce_Api.Core\
                  .Dto.Datapoints.Datapoint_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.ModifyBatchItemResponce_Api.Core\
                  .Dto.Datapoints.Datapoint_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Update multiple datapoints
      tags:
        - DataPoints
    put:
      deprecated: false
      operationId: DataPoints_BatchPut
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.DatapointsBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.DatapointsBatch"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.DatapointsBatch"
        description: A json containing the datapoints to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.ModifyBatchItemResponce_Api.Core\
                  .Dto.Datapoints.Datapoint_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.ModifyBatchItemResponce_Api.Core\
                  .Dto.Datapoints.Datapoint_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Create multiple datapoints
      tags:
        - DataPoints
  /datapoints/count:
    get:
      deprecated: false
      operationId: DataPoints_Count
      parameters:
        - description: Type of the datapoint ("tp"/"tl")
          in: query
          name: type
          required: false
          schema:
            enum:
              - tp
              - tl
            type: string
        - description: Status of the datapoint
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
              - paused
              - spam
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tags
          required: false
          schema:
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Filter fields by favourite status
          in: query
          name: onlyFavorites
          required: false
          schema:
            type: boolean
        - description: Exclude datapoints created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude datapoints created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Count the datapoints associated to the user
      tags:
        - DataPoints
  "/datapoints/{id}":
    delete:
      deprecated: false
      operationId: DataPoints_Delete
      parameters:
        - description: The id of the datapoint
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Delete a datapoint
      tags:
        - DataPoints
    get:
      deprecated: false
      parameters:
        - description: The id of the datapoint
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Datapoints.Datapoint"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Datapoints.Datapoint"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Get a datapoint
      tags:
        - DataPoints
    post:
      deprecated: false
      operationId: DataPoints_Post
      parameters:
        - description: The id of the datapoint
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Api.Core.Dto.Datapoints.Datapoint"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Update a datapoint
      tags:
        - DataPoints
  "/datapoints/{id}/aggregated":
    get:
      deprecated: false
      operationId: DataPoints_GetStatisticsSingle
      parameters:
        - description: Id of the datapoint
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: If using "yesterday" or "today" timeframe you can ask for the
            hourly detail
          in: query
          name: hourly
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this datapoint for a timeframe
      tags:
        - DataPoints
  "/datapoints/{id}/aggregated/list":
    get:
      deprecated: false
      operationId: DataPoints_GetStatisticsList
      parameters:
        - description: Id of the datapoint
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: The temporal entity you want to group by ("week"/"month"). If
            unspecified is "day".
          in: query
          name: groupBy
          required: false
          schema:
            enum:
              - week
              - month
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ag\
                  gregated.AggregatedResult_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ag\
                  gregated.AggregatedResult_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this datapoint for a timeframe grouped by
        some temporal entity (day/week/month)
      tags:
        - DataPoints
  "/datapoints/{id}/favourite":
    put:
      deprecated: false
      operationId: DataPoints_PatchFavourite
      parameters:
        - description: Id of the datapoint
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Fast switch the "favourite" field of a datapoint
      tags:
        - DataPoints
  "/datapoints/{id}/hits":
    get:
      deprecated: false
      operationId: DataPoints_GetHits
      parameters:
        - description: Id of the datapoint
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeframe
          required: true
          schema:
            enum:
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - custom
            type: string
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Offset where to start from (it's the lastKey field in the response
            object)
          in: query
          name: offset
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
          in: query
          name: filter
          required: false
          schema:
            enum:
              - spiders
              - uniques
              - nonuniques
              - conversions
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitListPage"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitListPage"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve the list of events related to this datapoint.
      tags:
        - DataPoints
  "/datapoints/{id}/notes":
    put:
      deprecated: false
      operationId: DataPoints_PatchNotes
      parameters:
        - description: Id of the datapoint
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Api.Core.Requests.GenericTextPatch"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Fast patch the "notes" field of a datapoint
      tags:
        - DataPoints
  "/datapoints/{id}/reports":
    get:
      deprecated: false
      operationId: DataPoints_GetTops
      parameters:
        - description: Id of the datapoint
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Type of the report.
          in: query
          name: type
          required: true
          schema:
            enum:
              - browsers
              - browsersfamilies
              - platforms
              - cities
              - countries
              - isps
              - ips
              - oss
              - ossfamilies
              - keywords
              - referrers
              - destinations
              - languages
              - params
            type: string
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeframe
          required: true
          schema:
            enum:
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Tops.Top"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Tops.Top"
          description: ""
        "401":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Retrieve a top report connected to this datapoint
      tags:
        - DataPoints
  /domains:
    get:
      deprecated: false
      operationId: Domains_Get
      parameters:
        - description: Offset where to start from
          in: query
          name: offset
          required: false
          schema:
            format: int32
            minLength: 0
            type: integer
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Type of domain ("system"/"go"/"personal"/"dedicated"). If not
            specified default is "system"
          in: query
          name: type
          required: false
          schema:
            default: system
            enum:
              - system
              - go
              - personal
              - dedicated
            type: string
        - description: Filter domains with this anmen
          in: query
          name: name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve a list of domains
      tags:
        - Domains
    post:
      deprecated: false
      operationId: Domains_Put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Domains.Domain"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Domains.Domain"
          application/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Domains.Domain"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Domains.Domain"
          text/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Domains.Domain"
        description: The domain to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Create a domain
      tags:
        - Domains
  /domains/count:
    get:
      deprecated: false
      operationId: Domains_Count
      parameters:
        - description: Type of domain ("system"/"go"/"personal"/"dedicated"). If not
            specified default is "system"
          in: query
          name: type
          required: false
          schema:
            default: system
            enum:
              - system
              - go
              - personal
              - dedicated
            type: string
        - description: Filter domains with this anmen
          in: query
          name: name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve count of domains
      tags:
        - Domains
  "/domains/{id}":
    delete:
      deprecated: false
      operationId: Domains_Delete
      parameters:
        - description: Id of domain
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete a domain
      tags:
        - Domains
    get:
      deprecated: false
      parameters:
        - description: Id of domain
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Domains.Domain"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Domains.Domain"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Domains.Domain"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Domains.Domain"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Get a domain
      tags:
        - Domains
    post:
      deprecated: false
      operationId: Domains_Update
      parameters:
        - description: Id of domain
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Domains.Domain"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Domains.Domain"
          application/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Domains.Domain"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Domains.Domain"
          text/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Domains.Domain"
        description: The domain to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Update a domain
      tags:
        - Domains
  /groups:
    get:
      deprecated: false
      operationId: Groups_Get
      parameters:
        - description: Where to start when retrieving elements. Default is 0 if not
            specified.
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            minLength: 0
            type: integer
        - description: Maximum elements to retrieve. Default to 20 if not specified.
          in: query
          name: limit
          required: false
          schema:
            default: 20
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Status of the group
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tags
          required: false
          schema:
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Exclude groups created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude groups created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
        - description: Write permission
          in: query
          name: write
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the groups associated to the user.
      tags:
        - Groups
    post:
      deprecated: false
      operationId: Groups_Put
      requestBody:
        $ref: "#/components/requestBodies/Api.Core.Dto.Groups.Group"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Create a group
      tags:
        - Groups
  /groups/aggregated:
    get:
      deprecated: false
      operationId: Groups_GetStatisticsAggregatedSingle
      parameters:
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: If using "yesterday" or "today" timeframe you can ask for the
            hourly detail
          in: query
          name: hourly
          required: false
          schema:
            type: boolean
        - description: Status of group ("deleted"/"active")
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tag
          required: false
          schema:
            type: string
        - description: Is the group is marked as favourite
          in: query
          name: favourite
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this customer for a timeframe by groups
      tags:
        - Groups
  /groups/aggregated/list:
    get:
      deprecated: false
      operationId: Groups_GetStatisticsAllList
      parameters:
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: Status of group ("deleted"/"active")
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tag
          required: false
          schema:
            type: string
        - description: Is the group is marked as favourite
          in: query
          name: favourite
          required: false
          schema:
            type: boolean
        - description: The temporal entity you want to group by ("week"/"month"). If
            unspecified is "day".
          in: query
          name: groupBy
          required: false
          schema:
            enum:
              - deleted
              - active
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ag\
                  gregated.AggregatedResult_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ag\
                  gregated.AggregatedResult_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about all groups of this customer for a timeframe
        grouped by some temporal entity (day/week/month)
      tags:
        - Groups
  /groups/count:
    get:
      deprecated: false
      operationId: Groups_Count
      parameters:
        - description: Status of the datapoint
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tags
          required: false
          schema:
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Exclude groups created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude groups created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
        - description: Write permission
          in: query
          name: write
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Count the groups associated to the user.
      tags:
        - Groups
  "/groups/{id}":
    delete:
      deprecated: false
      operationId: Groups_Delete
      parameters:
        - description: Id of the group
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Delete group specified by id
      tags:
        - Groups
    get:
      deprecated: false
      parameters:
        - description: The id of the group
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Groups.Group"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Groups.Group"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Get a group
      tags:
        - Groups
    post:
      deprecated: false
      operationId: Groups_Post
      parameters:
        - description: The id of the group
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Api.Core.Dto.Groups.Group"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Update a group
      tags:
        - Groups
  "/groups/{id}/aggregated":
    get:
      deprecated: false
      operationId: Groups_GetStatisticsSingle
      parameters:
        - description: Id of the group
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: If using "yesterday" or "today" timeframe you can ask for the
            hourly detail
          in: query
          name: hourly
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this group for a timeframe
      tags:
        - Groups
  "/groups/{id}/aggregated/list":
    get:
      deprecated: false
      operationId: Groups_GetStatisticsList
      parameters:
        - description: Id of the group
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: The temporal entity you want to group by ("week"/"month"). If
            unspecified is "day".
          in: query
          name: groupBy
          required: false
          schema:
            enum:
              - week
              - month
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ag\
                  gregated.AggregatedResult_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Ag\
                  gregated.AggregatedResult_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this group for a timeframe grouped by some
        temporal entity (day/week/month)
      tags:
        - Groups
  "/groups/{id}/aggregated/summary":
    get:
      deprecated: false
      operationId: Groups_GetDatapointsSummary
      parameters:
        - description: Filter by this group id
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeFrame
          required: true
          schema:
            enum:
              - today
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - last12months
              - lastyear
              - currentyear
              - beginning
              - custom
            type: string
        - description: Type of datapoint ("tl"/"tp")
          in: query
          name: type
          required: false
          schema:
            enum:
              - tp
              - tl
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: Status of datapoint ("deleted"/"active"/"paused"/"spam")
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tag
          required: false
          schema:
            type: string
        - description: Is the datapoint marked as favourite
          in: query
          name: favourite
          required: false
          schema:
            type: boolean
        - description: Field to sort by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
        - description: Direction of sort "asc" or "desc"
          in: query
          name: sortDirection
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - description: Offset where to start from
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            minLength: 0
            type: integer
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            default: 20
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about a subset of datapoints for a timeframe with
        datapoints data
      tags:
        - Groups
  "/groups/{id}/datapoints":
    get:
      deprecated: false
      operationId: Groups_GetDatapoints
      parameters:
        - description: Id of the group
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Where to start when retrieving elements. Default is 0 if not
            specified.
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            minLength: 0
            type: integer
        - description: Maximum elements to retrieve. Default to 20 if not specified.
          in: query
          name: limit
          required: false
          schema:
            default: 20
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Type of the datapoint ("tp"/"tl")
          in: query
          name: type
          required: false
          schema:
            enum:
              - tp
              - tl
            type: string
        - description: Status of the datapoint
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
              - paused
              - spam
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tags
          required: false
          schema:
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Filter fields by favourite status
          in: query
          name: onlyFavorites
          required: false
          schema:
            type: boolean
        - description: Field to sort by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
        - description: Direction of sort "asc" or "desc"
          in: query
          name: sortDirection
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - description: Exclude datapoints created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude datapoints created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the datapoints associated to the user in this group.
      tags:
        - Groups
    post:
      deprecated: false
      operationId: Groups_PutDatapoint
      parameters:
        - description: The id of the group
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Api.Core.Dto.Datapoints.Datapoint"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Create a datapoint in this group
      tags:
        - Groups
  "/groups/{id}/datapoints/count":
    get:
      deprecated: false
      operationId: Groups_GetDatapointsCount
      parameters:
        - description: Id of the group
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Type of the datapoint ("tp"/"tl")
          in: query
          name: type
          required: false
          schema:
            enum:
              - tp
              - tl
            type: string
        - description: Status of the datapoint
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
              - paused
              - spam
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tags
          required: false
          schema:
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Filter fields by favourite status
          in: query
          name: onlyFavorites
          required: false
          schema:
            type: boolean
        - description: Exclude datapoints created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude datapoints created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Count the datapoints associated to the user in this group.
      tags:
        - Groups
  "/groups/{id}/favourite":
    put:
      deprecated: false
      operationId: Groups_PatchFavourite
      parameters:
        - description: Id of the group
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Fast switch the "favourite" field of a group
      tags:
        - Groups
  "/groups/{id}/hits":
    get:
      deprecated: false
      operationId: Groups_GetHits
      parameters:
        - description: Id of the group
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeframe
          required: true
          schema:
            enum:
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - custom
            type: string
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Offset where to start from (it's the lastKey field in the response
            object)
          in: query
          name: offset
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
          in: query
          name: filter
          required: false
          schema:
            enum:
              - spiders
              - uniques
              - nonuniques
              - conversions
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitListPage"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitListPage"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve the list of events related to this group.
      tags:
        - Groups
  "/groups/{id}/notes":
    put:
      deprecated: false
      operationId: Groups_PatchNotes
      parameters:
        - description: Id of the group
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Api.Core.Requests.GenericTextPatch"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Fast patch the "notes" field of a group
      tags:
        - Groups
  "/groups/{id}/reports":
    get:
      deprecated: false
      operationId: Groups_GetTops
      parameters:
        - description: Id of the group
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Type of the report.
          in: query
          name: type
          required: true
          schema:
            enum:
              - browsers
              - browsersfamilies
              - platforms
              - cities
              - countries
              - isps
              - ips
              - oss
              - ossfamilies
              - keywords
              - referrers
              - destinations
              - languages
              - params
            type: string
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeframe
          required: true
          schema:
            enum:
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - beginning
              - custom
            type: string
        - description: Type of the event you want to filter this report with. By default
            no filter is applied.
          in: query
          name: hittype
          required: false
          schema:
            enum:
              - clicks
              - views
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Tops.Top"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Tops.Top"
          description: ""
        "401":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Retrieve a top report connected to this group
      tags:
        - Groups
  /hits:
    get:
      deprecated: false
      operationId: Hits_GetHits
      parameters:
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeframe
          required: true
          schema:
            enum:
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - custom
            type: string
        - description: Limit results to this number
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
        - description: Offset where to start from (it's the lastKey field in the response
            object)
          in: query
          name: offset
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
        - description: Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
          in: query
          name: filter
          required: false
          schema:
            enum:
              - spiders
              - uniques
              - nonuniques
              - conversions
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitListPage"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitListPage"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve the list of events related to this account.
      tags:
        - Hits
  /me:
    get:
      deprecated: false
      operationId: Me_GetMe
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.User"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve current account data
      tags:
        - Me
  /me/plan:
    get:
      deprecated: false
      operationId: Me_GetMePlan
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Plan"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Plan"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Plan"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Accounting.Plan"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve current account plan
      tags:
        - Me
  /reports:
    get:
      deprecated: false
      operationId: Reports_Get
      parameters:
        - description: Type of the report.
          in: query
          name: type
          required: true
          schema:
            enum:
              - browsers
              - browsersfamilies
              - platforms
              - cities
              - countries
              - isps
              - ips
              - oss
              - ossfamilies
              - keywords
              - referrers
              - destinations
              - languages
              - params
            type: string
        - description: Timeframe of the request. See list at $timeframeList
          in: query
          name: timeframe
          required: true
          schema:
            enum:
              - yesterday
              - last7
              - last30
              - lastmonth
              - currentmonth
              - previousmonth
              - last90
              - last120
              - last180
              - beginning
              - custom
            type: string
        - description: Type of the event you want to filter this report with. By default
            no filter is applied.
          in: query
          name: hittype
          required: false
          schema:
            type: string
        - description: Filter by this group id (mutually exclusive with "datapoint" and
            "conversion")
          in: query
          name: group
          required: false
          schema:
            format: int64
            type: integer
        - description: Filter by this datapoint id (mutually exclusive with "group" and
            "conversion")
          in: query
          name: datapoint
          required: false
          schema:
            format: int64
            type: integer
        - description: Filter by this conversion id (mutually exclusive with "datapoint"
            and "group")
          in: query
          name: conversion
          required: false
          schema:
            format: int64
            type: integer
        - description: If using a "custom" timeFrame you can specify the starting day
            (YYYYMMDD)
          in: query
          name: fromDay
          required: false
          schema:
            type: string
        - description: If using a "custom" timeFrame you can specify the ending day
            (YYYYMMDD)
          in: query
          name: toDay
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Tops.Top"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Tops.Top"
          description: ""
        "401":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Retrieve a top report
      tags:
        - Reports
  /retargeting:
    get:
      deprecated: false
      operationId: Retargeting_Get
      parameters:
        - description: Where to start when retrieving elements. Default is 0 if not
            specified.
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            minLength: 0
            type: integer
        - description: Maximum elements to retrieve. Default to 20 if not specified.
          in: query
          name: limit
          required: false
          schema:
            default: 20
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the retargeting scripts associated to the user
      tags:
        - Retargeting
    post:
      deprecated: false
      operationId: Retargeting_Put
      requestBody:
        $ref: "#/components/requestBodies/Api.Core.Dto.Retargeting.RetargetingScript"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Creates a retargeting script
      tags:
        - Retargeting
  /retargeting/count:
    get:
      deprecated: false
      operationId: Retargeting_Count
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve count of retargeting scripts
      tags:
        - Retargeting
  "/retargeting/{id}":
    delete:
      deprecated: false
      operationId: Retargeting_Delete
      parameters:
        - description: The id of the retargeting script
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Deletes a retargeting script (and remove associations)
      tags:
        - Retargeting
    get:
      deprecated: false
      parameters:
        - description: The id of the retargeting script
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Get a retargeting script object
      tags:
        - Retargeting
    post:
      deprecated: false
      operationId: Retargeting_Post
      parameters:
        - description: The id of the retargeting script
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Api.Core.Dto.Retargeting.RetargetingScript"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Updates a retargeting script
      tags:
        - Retargeting
  "/retargeting/{id}/datapoints":
    get:
      deprecated: false
      operationId: Retargeting_GetDatapoints
      parameters:
        - description: Id of the retargeting script
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Where to start when retrieving elements. Default is 0 if not
            specified.
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            minLength: 0
            type: integer
        - description: Maximum elements to retrieve. Default to 20 if not specified.
          in: query
          name: limit
          required: false
          schema:
            default: 20
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Status of the datapoint
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
              - paused
              - spam
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tags
          required: false
          schema:
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Filter fields by favourite status
          in: query
          name: onlyFavorites
          required: false
          schema:
            type: boolean
        - description: Field to sort by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
        - description: Direction of sort "asc" or "desc"
          in: query
          name: sortDirection
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - description: Exclude datapoints created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude datapoints created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the datapoints associated to the retargeting script.
      tags:
        - Retargeting
  "/retargeting/{id}/datapoints/count":
    get:
      deprecated: false
      operationId: Retargeting_GetDatapointsCount
      parameters:
        - description: Id of the group
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Status of the datapoint
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
              - paused
              - spam
            type: string
        - description: A comma separated list of tags you want to filter with.
          in: query
          name: tags
          required: false
          schema:
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Filter fields by favourite status
          in: query
          name: onlyFavorites
          required: false
          schema:
            type: boolean
        - description: Exclude datapoints created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude datapoints created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Count the datapoints associated to the retargeting script.
      tags:
        - Retargeting
  /tags:
    get:
      deprecated: false
      operationId: Tags_Get
      parameters:
        - description: Where to start when retrieving elements. Default is 0 if not
            specified.
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            minLength: 0
            type: integer
        - description: Maximum elements to retrieve. Default to 20 if not specified.
          in: query
          name: limit
          required: false
          schema:
            default: 20
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Name of the tag
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Comma separated list of datapoints id to filter by
          in: query
          name: datapoints
          required: false
          schema:
            type: string
        - description: Comma separated list of groups id to filter by
          in: query
          name: groups
          required: false
          schema:
            type: string
        - description: Type of entity related to the tag
          in: query
          name: type
          required: false
          schema:
            enum:
              - tp
              - tl
              - dp
              - gr
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the groups associated to the user filtered by this tag.
      tags:
        - Tags
    post:
      deprecated: false
      operationId: Tags_Put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Tags.Tag"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Tags.Tag"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Dto.Tags.Tag"
        description: The body of the tag
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Create a tag
      tags:
        - Tags
  /tags/count:
    get:
      deprecated: false
      operationId: Tags_Count
      parameters:
        - description: Name of the tag
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Comma separated list of datapoints id to filter by
          in: query
          name: datapoints
          required: false
          schema:
            type: string
        - description: Comma separated list of groups id to filter by
          in: query
          name: groups
          required: false
          schema:
            type: string
        - description: Type of entity related to the tag
          in: query
          name: type
          required: false
          schema:
            enum:
              - tp
              - tl
              - dp
              - gr
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/System.Object"
            text/json:
              schema:
                $ref: "#/components/schemas/System.Object"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the groups associated to the user filtered by this tag.
      tags:
        - Tags
  "/tags/{tagId}":
    delete:
      deprecated: false
      operationId: Tags_Delete
      parameters:
        - description: Id of the tag
          in: path
          name: tagId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/System.Object"
            text/json:
              schema:
                $ref: "#/components/schemas/System.Object"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete a tag
      tags:
        - Tags
    get:
      deprecated: false
      parameters:
        - description: Id of the tag
          in: path
          name: tagId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Tags.Tag"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Dto.Tags.Tag"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve a tag
      tags:
        - Tags
  "/tags/{tagId}/datapoints":
    delete:
      deprecated: false
      operationId: Tags_DeleteRelatedDatapoints
      parameters:
        - description: Id of the tag
          in: path
          name: tagId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete the association of this tag with all datapoints
      tags:
        - Tags
    get:
      deprecated: false
      operationId: Tags_GetDatapoints
      parameters:
        - description: Id of the tag.
          in: path
          name: tagId
          required: true
          schema:
            format: int64
            type: integer
        - description: Where to start when retrieving elements. Default is 0 if not
            specified.
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            minLength: 0
            type: integer
        - description: Maximum elements to retrieve. Default to 20 if not specified.
          in: query
          name: limit
          required: false
          schema:
            default: 20
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Type of the datapoint ("tp"/"tl")
          in: query
          name: type
          required: false
          schema:
            enum:
              - tp
              - tl
            type: string
        - description: Status of the datapoint
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
              - paused
              - spam
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Exclude datapoints created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude datapoints created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the datapoints associated to the user filtered by this tag
      tags:
        - Tags
  "/tags/{tagId}/datapoints/count":
    get:
      deprecated: false
      operationId: Tags_GetDatapointsCount
      parameters:
        - description: Id of the tag.
          in: path
          name: tagId
          required: true
          schema:
            format: int64
            type: integer
        - description: Type of the datapoint ("tp"/"tl")
          in: query
          name: type
          required: false
          schema:
            enum:
              - tp
              - tl
            type: string
        - description: Status of the datapoint
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
              - paused
              - spam
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Exclude datapoints created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude datapoints created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Count the datapoints associated to the user filtered by this tag
      tags:
        - Tags
  "/tags/{tagId}/datapoints/patch":
    put:
      deprecated: false
      operationId: Tags_PatchDataPoint
      parameters:
        - description: Id of the tag
          in: path
          name: tagId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Api.Core.Requests.PatchBody"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Associate/Deassociate a tag with a datapoint
      tags:
        - Tags
  "/tags/{tagId}/groups":
    delete:
      deprecated: false
      operationId: Tags_DeleteRelatedGroups
      parameters:
        - description: Id of the tag
          in: path
          name: tagId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete the association of this tag with all groups
      tags:
        - Tags
    get:
      deprecated: false
      operationId: Tags_GetGroups
      parameters:
        - description: Id of the tag.
          in: path
          name: tagId
          required: true
          schema:
            format: int64
            type: integer
        - description: Where to start when retrieving elements. Default is 0 if not
            specified.
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            minLength: 0
            type: integer
        - description: Maximum elements to retrieve. Default to 20 if not specified.
          in: query
          name: limit
          required: false
          schema:
            default: 20
            format: int32
            maxLength: 0
            minLength: 0
            type: integer
        - description: Status of the datapoint
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Exclude groups created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude groups created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Respon\
                  ses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the groups associated to the user filtered by this tag.
      tags:
        - Tags
  "/tags/{tagId}/groups/count":
    get:
      deprecated: false
      operationId: Tags_GetGroupsCount
      parameters:
        - description: Id of the tag.
          in: path
          name: tagId
          required: true
          schema:
            format: int64
            type: integer
        - description: Status of the datapoint
          in: query
          name: status
          required: false
          schema:
            enum:
              - deleted
              - active
            type: string
        - description: Filter fields by this pattern
          in: query
          name: textSearch
          required: false
          schema:
            type: string
        - description: Exclude groups created before this date (YYYYMMDD)
          in: query
          name: createdAfter
          required: false
          schema:
            type: string
        - description: Exclude groups created after this date (YYYYMMDD)
          in: query
          name: createdBefore
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.CountResponce"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Count the groups associated to the user filtered by this tag
      tags:
        - Tags
  "/tags/{tagId}/groups/patch":
    put:
      deprecated: false
      operationId: Tags_PatchGroup
      parameters:
        - description: Id of the tag
          in: path
          name: tagId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Api.Core.Requests.PatchBody"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Associate/Deassociate a tag with a group
      tags:
        - Tags
  "/tags/{tagId}/name":
    put:
      deprecated: false
      operationId: Tags_PatchTagName
      parameters:
        - description: Id of the tag
          in: path
          name: tagId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.GenericTextPatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.GenericTextPatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.GenericTextPatch"
          text/json:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.GenericTextPatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/Api.Core.Requests.GenericTextPatch"
        description: The body patch
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/json:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Fast patch a tag name
      tags:
        - Tags
components:
  requestBodies:
    Api.Core.Dto.Datapoints.Datapoint:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Api.Core.Dto.Datapoints.Datapoint"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/Api.Core.Dto.Datapoints.Datapoint"
        text/json:
          schema:
            $ref: "#/components/schemas/Api.Core.Dto.Datapoints.Datapoint"
      description: The body of the datapoint
      required: true
    Api.Core.Dto.Groups.Group:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Api.Core.Dto.Groups.Group"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/Api.Core.Dto.Groups.Group"
        text/json:
          schema:
            $ref: "#/components/schemas/Api.Core.Dto.Groups.Group"
      description: The body of the group
      required: true
    Api.Core.Dto.Retargeting.RetargetingScript:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript"
        application/xml:
          schema:
            $ref: "#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript"
        text/json:
          schema:
            $ref: "#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript"
        text/xml:
          schema:
            $ref: "#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript"
      description: The body of the retargeting script
      required: true
    Api.Core.Requests.GenericTextPatch:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.GenericTextPatch"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.GenericTextPatch"
        application/xml:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.GenericTextPatch"
        text/json:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.GenericTextPatch"
        text/xml:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.GenericTextPatch"
      description: Patch requests
      required: true
    Api.Core.Requests.PatchBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.PatchBody"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.PatchBody"
        application/xml:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.PatchBody"
        text/json:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.PatchBody"
        text/xml:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.PatchBody"
      description: The body patch
      required: true
    Api.Core.Requests.PermissionPatchRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.PermissionPatchRequest"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.PermissionPatchRequest"
        application/xml:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.PermissionPatchRequest"
        text/json:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.PermissionPatchRequest"
        text/xml:
          schema:
            $ref: "#/components/schemas/Api.Core.Requests.PermissionPatchRequest"
      description: The patch permission request
      required: true
  schemas:
    Api.Core.Dto.Accounting.ConversionOptions:
      properties:
        hideComCost:
          type: boolean
        hideCost:
          type: boolean
        hideCount:
          type: boolean
        hideParams:
          type: boolean
        hideValue:
          type: boolean
        percentCommission:
          format: int32
          type: integer
        percentValue:
          format: int32
          type: integer
      type: object
    Api.Core.Dto.Accounting.DomainWhitelistEntry:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    Api.Core.Dto.Accounting.ExtendedGrants:
      properties:
        allowAllGrants:
          type: boolean
        allowGroupCreation:
          type: boolean
      type: object
    Api.Core.Dto.Accounting.Guest:
      properties:
        apiKey:
          type: string
        conversionOptions:
          $ref: "#/components/schemas/Api.Core.Dto.Accounting.ConversionOptions"
        creationDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        currentGrant:
          $ref: "#/components/schemas/Api.Core.Dto.Grants.Grant"
        dateFormat:
          type: string
        decimalSeparator:
          type: string
        email:
          type: string
        extendedGrants:
          $ref: "#/components/schemas/Api.Core.Dto.Accounting.ExtendedGrants"
        groupGrants:
          format: int64
          type: integer
        hitOptions:
          $ref: "#/components/schemas/Api.Core.Dto.Accounting.HitOptions"
        id:
          format: int64
          type: integer
        key:
          type: string
        language:
          type: string
        loginCount:
          format: int32
          type: integer
        name:
          type: string
        notes:
          type: string
        numberGroupSeparator:
          type: string
        password:
          type: string
        timeFormat:
          enum:
            - AmPm
            - H24
          type: string
        timeZone:
          format: int32
          type: integer
        timeframeMinDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        timezonename:
          type: string
        tlGrants:
          format: int64
          type: integer
        tpGrants:
          format: int64
          type: integer
        userName:
          type: string
      type: object
    Api.Core.Dto.Accounting.HitOptions:
      properties:
        hideReferrer:
          type: boolean
      type: object
    Api.Core.Dto.Accounting.IpBlacklistEntry:
      properties:
        id:
          type: string
        ip:
          type: string
      type: object
    Api.Core.Dto.Accounting.Plan:
      properties:
        allowedPersonalDomains:
          format: int32
          type: integer
        allowedPersonalUrls:
          format: int32
          type: integer
        billingPeriodEnd:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        billingPeriodStart:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        bonusMonthlyEvents:
          format: int64
          type: integer
        maximumDatapoints:
          format: int64
          type: integer
        maximumGuests:
          format: int64
          type: integer
        monthlyEvents:
          format: int64
          type: integer
        name:
          type: string
        price:
          format: double
          type: number
        profileId:
          format: int64
          type: integer
        recurring:
          type: boolean
        recurringPeriod:
          format: int32
          type: integer
        usedDatapoints:
          format: int64
          type: integer
        usedMonthlyEvents:
          format: int64
          type: integer
      type: object
    Api.Core.Dto.Accounting.User:
      properties:
        boGoVal:
          type: string
        bonusClicks:
          format: int64
          type: integer
        companyName:
          type: string
        companyRole:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        redirectOnly:
          type: boolean
        registrationDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        timeframeMinDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        timezone:
          format: int32
          type: integer
        timezonename:
          type: string
      type: object
    Api.Core.Dto.Aggregated.AggregatedResult:
      properties:
        activityDay:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        commissionsCost:
          format: double
          type: number
        conversionsCost:
          format: double
          type: number
        conversionsValue:
          format: double
          type: number
        convertedClicks:
          format: int64
          type: integer
        entityData:
          $ref: "#/components/schemas/System.Object"
        entityId:
          type: string
        fromDay:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        hourlyBreakDown:
          additionalProperties:
            $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
          type: object
        lastHitDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        spiderHitsCount:
          format: int64
          type: integer
        toDay:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        totalClicks:
          format: int64
          type: integer
        totalViews:
          format: int64
          type: integer
        uniqueClicks:
          format: int64
          type: integer
        uniqueConversions:
          format: int64
          type: integer
        uniqueViews:
          format: int64
          type: integer
      type: object
    Api.Core.Dto.Aggregated.AggregatedSummaryResult:
      properties:
        count:
          format: int64
          type: integer
        limit:
          format: int32
          type: integer
        offset:
          format: int64
          type: integer
        result:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
          type: array
      type: object
    Api.Core.Dto.ClickStream.Hit:
      properties:
        accessTime:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        browser:
          $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitBrowserInfo"
        clientLanguage:
          type: string
        conversion1:
          $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo"
        conversion2:
          $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo"
        conversion3:
          $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo"
        conversion4:
          $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo"
        conversion5:
          $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo"
        conversions:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo"
          type: array
        entity:
          $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitDatapointInfo"
        ip:
          type: string
        isProxy:
          type: string
        isSpider:
          type: string
        isUnique:
          type: string
        location:
          $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitLocationInfo"
        org:
          type: string
        os:
          $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitOsInfo"
        queryParams:
          type: string
        realDestinationUrl:
          type: string
        referer:
          type: string
        source:
          $ref: "#/components/schemas/Api.Core.Dto.ClickStream.HitSource"
        type:
          type: string
      type: object
    Api.Core.Dto.ClickStream.HitBrowserInfo:
      properties:
        browserType:
          type: string
        familyId:
          format: int64
          type: integer
        familyName:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    Api.Core.Dto.ClickStream.HitConversionInfo:
      properties:
        accessTime:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        comcost:
          format: double
          type: number
        cost:
          format: double
          type: number
        date:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        deleted:
          type: boolean
        id:
          format: int64
          type: integer
        name:
          type: string
        parameter:
          type: string
        value:
          format: double
          type: number
      type: object
    Api.Core.Dto.ClickStream.HitDatapointInfo:
      properties:
        creationDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        datapointFavourite:
          type: boolean
        datapointId:
          format: int64
          type: integer
        datapointName:
          type: string
        datapointTitle:
          type: string
        datapointType:
          type: string
        destinationUrl:
          type: string
        groupId:
          format: int64
          type: integer
        groupName:
          type: string
        isABTest:
          type: boolean
        isPrivateShared:
          type: boolean
        isPublic:
          type: boolean
        notes:
          type: string
        status:
          enum:
            - Active
            - Paused
            - Abuse
            - Deleted
          type: string
        tags:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Tags.Tag"
          type: array
        trackingCode:
          type: string
      type: object
    Api.Core.Dto.ClickStream.HitListPage:
      properties:
        hits:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.ClickStream.Hit"
          type: array
        lastKey:
          type: string
      type: object
    Api.Core.Dto.ClickStream.HitLocationInfo:
      properties:
        areacode:
          type: string
        city:
          type: string
        country:
          type: string
        latitude:
          format: double
          type: number
        longitude:
          format: double
          type: number
        metrocode:
          type: string
        organization:
          type: string
        postalcode:
          type: string
        region:
          type: string
        regionName:
          type: string
      type: object
    Api.Core.Dto.ClickStream.HitOsInfo:
      properties:
        familyId:
          format: int64
          type: integer
        familyName:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    Api.Core.Dto.ClickStream.HitSource:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        param:
          type: string
      type: object
    Api.Core.Dto.Conversions.Conversion:
      properties:
        code:
          type: string
        creationDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        deleted:
          type: boolean
        description:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        protocol:
          enum:
            - Http
            - Https
          type: string
        value:
          format: double
          type: number
      type: object
    Api.Core.Dto.Datapoints.BrowserBaseDestinationItem:
      properties:
        emailDestinationUrl:
          type: string
        mobileDestinationUrl:
          type: string
        spidersDestinationUrl:
          type: string
      type: object
    Api.Core.Dto.Datapoints.Datapoint:
      properties:
        creationDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        encodeIp:
          type: boolean
        fifthConversionId:
          format: int64
          type: integer
        fifthConversionName:
          type: string
        firstConversionId:
          format: int64
          type: integer
        firstConversionName:
          type: string
        fourthConversionId:
          format: int64
          type: integer
        fourthConversionName:
          type: string
        groupId:
          format: int64
          type: integer
        groupName:
          type: string
        id:
          format: int64
          type: integer
        isPublic:
          type: boolean
        isSecured:
          type: boolean
        lightTracking:
          type: boolean
        name:
          type: string
        notes:
          type: string
        preferred:
          type: boolean
        redirectOnly:
          type: boolean
        secondConversionId:
          format: int64
          type: integer
        secondConversionName:
          type: string
        status:
          enum:
            - Active
            - Paused
            - Abuse
            - Deleted
          type: string
        tags:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Tags.Tag"
          type: array
        thirdConversionId:
          format: int64
          type: integer
        thirdConversionName:
          type: string
        title:
          type: string
        trackingCode:
          type: string
        type:
          enum:
            - TrackingLink
            - TrackingPixel
          type: string
        typeTL:
          $ref: "#/components/schemas/Api.Core.Dto.Datapoints.TrackingLinkSpecifics"
        typeTP:
          $ref: "#/components/schemas/Api.Core.Dto.Datapoints.TrackingPixelSpecifics"
        writePermited:
          type: boolean
      type: object
    Api.Core.Dto.Datapoints.DatapointRetargetingInfo:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    Api.Core.Dto.Datapoints.MultipleDestinationItem:
      properties:
        url:
          type: string
      type: object
    Api.Core.Dto.Datapoints.TrackingLinkSpecifics:
      properties:
        appendQuery:
          type: boolean
        browserDestinationItem:
          $ref: "#/components/schemas/Api.Core.Dto.Datapoints.BrowserBaseDestinationItem"
        destinationMode:
          enum:
            - Simple
            - RandomDestination
            - DestinationByLanguage
            - SpilloverDestination
            - DynamicUrl
            - BrowserDestination
            - DestinationByNation
            - UniqueDestination
            - SequentialDestination
            - WeightedDestination
          type: string
        domainId:
          format: int32
          type: integer
        encodeUrl:
          type: boolean
        expirationClicks:
          format: int64
          type: integer
        expirationDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        firstUrl:
          type: string
        goDomainId:
          format: int32
          type: integer
        hideUrl:
          type: boolean
        hideUrlTitle:
          type: string
        isABTest:
          type: boolean
        password:
          type: string
        pauseAfterClicksExpiration:
          type: boolean
        pauseAfterDateExpiration:
          type: boolean
        randomDestinationItems:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Datapoints.MultipleDestinationItem"
          type: array
        redirectType:
          enum:
            - PermanentRedirect
            - TemporaryRedirect
          type: string
        referrerClean:
          enum:
            - None
            - Clean
            - Myself
          type: string
        scripts:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Datapoints.DatapointRetargetingInfo"
          type: array
        sequentialDestinationItems:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Datapoints.MultipleDestinationItem"
          type: array
        spilloverDestinationItems:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Datapoints.MultipleDestinationItem"
          type: array
        uniqueDestinationItem:
          $ref: "#/components/schemas/Api.Core.Dto.Datapoints.UniqueDestinationItem"
        url:
          type: string
        urlAfterClicksExpiration:
          type: string
        urlAfterDateExpiration:
          type: string
        urlsByLanguage:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Datapoints.UrlByLanguageItem"
          type: array
        urlsByNation:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Datapoints.UrlByNationItem"
          type: array
        weightedDestinationItems:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Datapoints.WeightedDestinationItem"
          type: array
      type: object
    Api.Core.Dto.Datapoints.TrackingPixelSpecifics:
      properties:
        parameterNote:
          type: string
      type: object
    Api.Core.Dto.Datapoints.UniqueDestinationItem:
      properties:
        firstDestinationUrl:
          type: string
      type: object
    Api.Core.Dto.Datapoints.UrlByLanguageItem:
      properties:
        languageCode:
          type: string
        url:
          type: string
      type: object
    Api.Core.Dto.Datapoints.UrlByNationItem:
      properties:
        nation:
          type: string
        url:
          type: string
      type: object
    Api.Core.Dto.Datapoints.WeightedDestinationItem:
      properties:
        url:
          type: string
        weight:
          format: int32
          type: integer
      type: object
    Api.Core.Dto.Domains.Domain:
      properties:
        custom404:
          type: string
        customHomepage:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        type:
          enum:
            - System
            - Go
            - Dedicated
            - Personal
          type: string
      type: object
    Api.Core.Dto.EntityUriLong:
      properties:
        id:
          format: int64
          type: integer
        uri:
          type: string
      type: object
    Api.Core.Dto.Grants.Grant:
      properties:
        DatapointType:
          type: string
        Entity:
          $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
        EntityName:
          type: string
        EntityType:
          type: string
        Type:
          type: string
      type: object
    Api.Core.Dto.Groups.Group:
      properties:
        creationDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        deleted:
          type: boolean
        id:
          format: int64
          type: integer
        isPublic:
          type: boolean
        name:
          type: string
        notes:
          type: string
        preferred:
          type: boolean
        redirectOnly:
          type: boolean
        tags:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Tags.Tag"
          type: array
        writePermited:
          type: boolean
      type: object
    Api.Core.Dto.Retargeting.RetargetingScript:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        script:
          type: string
      type: object
    Api.Core.Dto.Tags.Tag:
      properties:
        datapoints:
          items:
            format: int64
            type: integer
          type: array
        groups:
          items:
            format: int64
            type: integer
          type: array
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    Api.Core.Dto.Tops.Top:
      properties:
        createdAt:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        data:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Tops.TopItem"
          type: array
        key:
          type: string
      type: object
    Api.Core.Dto.Tops.TopItem:
      properties:
        entityData:
          $ref: "#/components/schemas/System.Object"
        id:
          type: string
        lastHitDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        spiderClicks:
          format: int64
          type: integer
        spiderHits:
          format: int64
          type: integer
        spiderViews:
          format: int64
          type: integer
        totalClicks:
          format: int64
          type: integer
        totalCommissionsCost:
          format: double
          type: number
        totalConversions:
          format: int64
          type: integer
        totalConversionsCost:
          format: double
          type: number
        totalConversionsValue:
          format: double
          type: number
        totalHits:
          format: int64
          type: integer
        totalViews:
          format: int64
          type: integer
        uniqueClicks:
          format: int64
          type: integer
        uniqueHits:
          format: int64
          type: integer
        uniqueViews:
          format: int64
          type: integer
      type: object
    Api.Core.Requests.ConversionPatchBody:
      properties:
        Action:
          type: string
        Id:
          format: int64
          type: integer
        ReplaceId:
          format: int64
          type: integer
      type: object
    Api.Core.Requests.DatapointsBatch:
      properties:
        List:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Datapoints.Datapoint"
          type: array
      type: object
    Api.Core.Requests.DeleteBatch:
      properties:
        Entities:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.EntityUriLong"
          type: array
      type: object
    Api.Core.Requests.GenericTextPatch:
      properties:
        Text:
          type: string
      type: object
    Api.Core.Requests.PatchBody:
      properties:
        Action:
          type: string
        Id:
          format: int64
          type: integer
      type: object
    Api.Core.Requests.PatchBodyBatch:
      properties:
        PatchRequests:
          items:
            $ref: "#/components/schemas/Api.Core.Requests.PatchBody"
          type: array
      type: object
    Api.Core.Requests.PermissionPatchRequest:
      properties:
        Action:
          type: string
        Id:
          format: int64
          type: integer
        Verb:
          type: string
      type: object
    Api.Core.Responses.CountResponce:
      properties:
        count:
          format: int64
          type: integer
      type: object
    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Accounting.DomainWhitelistEntry_:
      properties:
        entities:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry"
          type: array
      type: object
    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Accounting.IpBlacklistEntry_:
      properties:
        entities:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry"
          type: array
      type: object
    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_:
      properties:
        entities:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult"
          type: array
      type: object
    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.ClickStream.Hit_:
      properties:
        entities:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.ClickStream.Hit"
          type: array
      type: object
    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Grants.Grant_:
      properties:
        entities:
          items:
            $ref: "#/components/schemas/Api.Core.Dto.Grants.Grant"
          type: array
      type: object
    Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_:
      properties:
        entities:
          items:
            $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
          type: array
      type: object
    Api.Core.Responses.EntityUri_System.Int64_:
      properties:
        id:
          format: int64
          type: integer
        uri:
          type: string
      type: object
    Api.Core.Responses.ModifyBatchItemResponce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_:
      properties:
        entityData:
          $ref: "#/components/schemas/Api.Core.Dto.Datapoints.Datapoint"
        errors:
          items:
            $ref: "#/components/schemas/ClickMeter.Infrastructure.Validation.ValidationFail\
              ure"
          type: array
        result:
          $ref: "#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_"
        status:
          type: string
      type: object
    ClickMeter.Infrastructure.Validation.ValidationFailure:
      properties:
        code:
          $ref: "#/components/schemas/System.Object"
        errorMessage:
          type: string
        errorValue:
          $ref: "#/components/schemas/System.Object"
        property:
          type: string
      type: object
    System.Object:
      properties: {}
      type: object
  securitySchemes:
    api_key:
      description: API Key Authentication
      in: header
      name: X-Clickmeter-AuthKey
      type: apiKey
